{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_REORDER_COL_DEF } from './gridRowReorderColDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      rowReorderCellContainer: ['rowReorderCellContainer'],\n      columnHeaderReorder: ['columnHeaderReorder']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowReorderPreProcessors = (privateApiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateReorderColumn = React.useCallback(columnsState => {\n    const reorderColumn = _extends({}, GRID_REORDER_COL_DEF, {\n      cellClassName: classes.rowReorderCellContainer,\n      headerClassName: classes.columnHeaderReorder,\n      headerName: privateApiRef.current.getLocaleText('rowReorderingHeaderName')\n    });\n    const shouldHaveReorderColumn = props.rowReordering;\n    const haveReorderColumn = columnsState.lookup[reorderColumn.field] != null;\n    if (shouldHaveReorderColumn && haveReorderColumn) {\n      return columnsState;\n    }\n    if (shouldHaveReorderColumn && !haveReorderColumn) {\n      columnsState.lookup[reorderColumn.field] = reorderColumn;\n      columnsState.orderedFields = [reorderColumn.field, ...columnsState.orderedFields];\n    } else if (!shouldHaveReorderColumn && haveReorderColumn) {\n      delete columnsState.lookup[reorderColumn.field];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== reorderColumn.field);\n    }\n    return columnsState;\n  }, [privateApiRef, classes, props.rowReordering]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', updateReorderColumn);\n};","map":{"version":3,"names":["_extends","React","unstable_composeClasses","composeClasses","getDataGridUtilityClass","useGridRegisterPipeProcessor","GRID_REORDER_COL_DEF","useUtilityClasses","ownerState","classes","useMemo","slots","rowReorderCellContainer","columnHeaderReorder","useGridRowReorderPreProcessors","privateApiRef","props","updateReorderColumn","useCallback","columnsState","reorderColumn","cellClassName","headerClassName","headerName","current","getLocaleText","shouldHaveReorderColumn","rowReordering","haveReorderColumn","lookup","field","orderedFields","filter"],"sources":["/Users/shyamkansagra/Documents/Code/general/pocket-wallet/node_modules/@mui/x-data-grid-pro/hooks/features/rowReorder/useGridRowReorderPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_REORDER_COL_DEF } from './gridRowReorderColDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      rowReorderCellContainer: ['rowReorderCellContainer'],\n      columnHeaderReorder: ['columnHeaderReorder']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowReorderPreProcessors = (privateApiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateReorderColumn = React.useCallback(columnsState => {\n    const reorderColumn = _extends({}, GRID_REORDER_COL_DEF, {\n      cellClassName: classes.rowReorderCellContainer,\n      headerClassName: classes.columnHeaderReorder,\n      headerName: privateApiRef.current.getLocaleText('rowReorderingHeaderName')\n    });\n    const shouldHaveReorderColumn = props.rowReordering;\n    const haveReorderColumn = columnsState.lookup[reorderColumn.field] != null;\n    if (shouldHaveReorderColumn && haveReorderColumn) {\n      return columnsState;\n    }\n    if (shouldHaveReorderColumn && !haveReorderColumn) {\n      columnsState.lookup[reorderColumn.field] = reorderColumn;\n      columnsState.orderedFields = [reorderColumn.field, ...columnsState.orderedFields];\n    } else if (!shouldHaveReorderColumn && haveReorderColumn) {\n      delete columnsState.lookup[reorderColumn.field];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== reorderColumn.field);\n    }\n    return columnsState;\n  }, [privateApiRef, classes, props.rowReordering]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', updateReorderColumn);\n};"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,uBAAuB,IAAIC,cAAc,QAAQ,YAAY;AACtE,SAASC,uBAAuB,QAAQ,kBAAkB;AAC1D,SAASC,4BAA4B,QAAQ,4BAA4B;AACzE,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;EACtC,MAAM;IACJC;EACF,CAAC,GAAGD,UAAU;EACd,OAAOP,KAAK,CAACS,OAAO,CAAC,MAAM;IACzB,MAAMC,KAAK,GAAG;MACZC,uBAAuB,EAAE,CAAC,yBAAyB,CAAC;MACpDC,mBAAmB,EAAE,CAAC,qBAAqB;IAC7C,CAAC;IACD,OAAOV,cAAc,CAACQ,KAAK,EAAEP,uBAAuB,EAAEK,OAAO,CAAC;EAChE,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;AACf,CAAC;AACD,OAAO,MAAMK,8BAA8B,GAAGA,CAACC,aAAa,EAAEC,KAAK,KAAK;EACtE,MAAMR,UAAU,GAAG;IACjBC,OAAO,EAAEO,KAAK,CAACP;EACjB,CAAC;EACD,MAAMA,OAAO,GAAGF,iBAAiB,CAACC,UAAU,CAAC;EAC7C,MAAMS,mBAAmB,GAAGhB,KAAK,CAACiB,WAAW,CAACC,YAAY,IAAI;IAC5D,MAAMC,aAAa,GAAGpB,QAAQ,CAAC,CAAC,CAAC,EAAEM,oBAAoB,EAAE;MACvDe,aAAa,EAAEZ,OAAO,CAACG,uBAAuB;MAC9CU,eAAe,EAAEb,OAAO,CAACI,mBAAmB;MAC5CU,UAAU,EAAER,aAAa,CAACS,OAAO,CAACC,aAAa,CAAC,yBAAyB;IAC3E,CAAC,CAAC;IACF,MAAMC,uBAAuB,GAAGV,KAAK,CAACW,aAAa;IACnD,MAAMC,iBAAiB,GAAGT,YAAY,CAACU,MAAM,CAACT,aAAa,CAACU,KAAK,CAAC,IAAI,IAAI;IAC1E,IAAIJ,uBAAuB,IAAIE,iBAAiB,EAAE;MAChD,OAAOT,YAAY;IACrB;IACA,IAAIO,uBAAuB,IAAI,CAACE,iBAAiB,EAAE;MACjDT,YAAY,CAACU,MAAM,CAACT,aAAa,CAACU,KAAK,CAAC,GAAGV,aAAa;MACxDD,YAAY,CAACY,aAAa,GAAG,CAACX,aAAa,CAACU,KAAK,EAAE,GAAGX,YAAY,CAACY,aAAa,CAAC;IACnF,CAAC,MAAM,IAAI,CAACL,uBAAuB,IAAIE,iBAAiB,EAAE;MACxD,OAAOT,YAAY,CAACU,MAAM,CAACT,aAAa,CAACU,KAAK,CAAC;MAC/CX,YAAY,CAACY,aAAa,GAAGZ,YAAY,CAACY,aAAa,CAACC,MAAM,CAACF,KAAK,IAAIA,KAAK,KAAKV,aAAa,CAACU,KAAK,CAAC;IACxG;IACA,OAAOX,YAAY;EACrB,CAAC,EAAE,CAACJ,aAAa,EAAEN,OAAO,EAAEO,KAAK,CAACW,aAAa,CAAC,CAAC;EACjDtB,4BAA4B,CAACU,aAAa,EAAE,gBAAgB,EAAEE,mBAAmB,CAAC;AACpF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}