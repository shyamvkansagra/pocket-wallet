{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\nimport { CURRENCY_OPTIONS } from '../services/static-data';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst StyledAutocomplete = styled(Autocomplete)(({\n  theme\n}) => ({\n  height: '100%',\n  [`& .${autocompleteClasses.inputRoot}`]: _extends({}, theme.typography.body2, {\n    padding: '1px 0',\n    height: '100%',\n    '& input': {\n      padding: '0 16px',\n      height: '100%'\n    }\n  })\n}));\nfunction EditCurrency(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n  const handleChange = React.useCallback(async (event, newValue) => {\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newValue.toUpperCase()\n    }, event);\n    apiRef.current.stopCellEditMode({\n      id,\n      field\n    });\n  }, [apiRef, field, id]);\n  return /*#__PURE__*/_jsx(StyledAutocomplete, {\n    value: value,\n    onChange: handleChange,\n    options: CURRENCY_OPTIONS,\n    autoHighlight: true,\n    fullWidth: true,\n    open: true,\n    disableClearable: true,\n    renderOption: (optionProps, option) => /*#__PURE__*/_jsxs(Box, _extends({\n      component: \"li\",\n      sx: {\n        '& > img': {\n          mr: 1.5,\n          flexShrink: 0\n        }\n      }\n    }, optionProps, {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        loading: \"lazy\",\n        width: \"20\",\n        src: `https://flagcdn.com/w20/${option.slice(0, -1).toLowerCase()}.png`,\n        srcSet: `https://flagcdn.com/w40/${option.slice(0, -1).toLowerCase()}.png 2x`,\n        alt: \"\"\n      }), option]\n    })),\n    renderInput: params => /*#__PURE__*/_jsx(InputBase, _extends({\n      autoFocus: true,\n      fullWidth: true,\n      id: params.id,\n      inputProps: _extends({}, params.inputProps, {\n        autoComplete: 'new-password' // disable autocomplete and autofill\n      })\n    }, params.InputProps))\n  });\n}\nexport function renderEditCurrency(params) {\n  return /*#__PURE__*/_jsx(EditCurrency, _extends({}, params));\n}","map":{"version":3,"names":["_extends","React","useGridApiContext","Autocomplete","autocompleteClasses","InputBase","Box","styled","CURRENCY_OPTIONS","jsx","_jsx","jsxs","_jsxs","StyledAutocomplete","theme","height","inputRoot","typography","body2","padding","EditCurrency","props","id","value","field","apiRef","handleChange","useCallback","event","newValue","current","setEditCellValue","toUpperCase","stopCellEditMode","onChange","options","autoHighlight","fullWidth","open","disableClearable","renderOption","optionProps","option","component","sx","mr","flexShrink","children","loading","width","src","slice","toLowerCase","srcSet","alt","renderInput","params","autoFocus","inputProps","autoComplete","InputProps","renderEditCurrency"],"sources":["/Users/shyamkansagra/Documents/Code/general/pocket-wallet/node_modules/@mui/x-data-grid-generator/renderer/renderEditCurrency.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\nimport { CURRENCY_OPTIONS } from '../services/static-data';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst StyledAutocomplete = styled(Autocomplete)(({\n  theme\n}) => ({\n  height: '100%',\n  [`& .${autocompleteClasses.inputRoot}`]: _extends({}, theme.typography.body2, {\n    padding: '1px 0',\n    height: '100%',\n    '& input': {\n      padding: '0 16px',\n      height: '100%'\n    }\n  })\n}));\nfunction EditCurrency(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n  const handleChange = React.useCallback(async (event, newValue) => {\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newValue.toUpperCase()\n    }, event);\n    apiRef.current.stopCellEditMode({\n      id,\n      field\n    });\n  }, [apiRef, field, id]);\n  return /*#__PURE__*/_jsx(StyledAutocomplete, {\n    value: value,\n    onChange: handleChange,\n    options: CURRENCY_OPTIONS,\n    autoHighlight: true,\n    fullWidth: true,\n    open: true,\n    disableClearable: true,\n    renderOption: (optionProps, option) => /*#__PURE__*/_jsxs(Box, _extends({\n      component: \"li\",\n      sx: {\n        '& > img': {\n          mr: 1.5,\n          flexShrink: 0\n        }\n      }\n    }, optionProps, {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        loading: \"lazy\",\n        width: \"20\",\n        src: `https://flagcdn.com/w20/${option.slice(0, -1).toLowerCase()}.png`,\n        srcSet: `https://flagcdn.com/w40/${option.slice(0, -1).toLowerCase()}.png 2x`,\n        alt: \"\"\n      }), option]\n    })),\n    renderInput: params => /*#__PURE__*/_jsx(InputBase, _extends({\n      autoFocus: true,\n      fullWidth: true,\n      id: params.id,\n      inputProps: _extends({}, params.inputProps, {\n        autoComplete: 'new-password' // disable autocomplete and autofill\n      })\n    }, params.InputProps))\n  });\n}\nexport function renderEditCurrency(params) {\n  return /*#__PURE__*/_jsx(EditCurrency, _extends({}, params));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}