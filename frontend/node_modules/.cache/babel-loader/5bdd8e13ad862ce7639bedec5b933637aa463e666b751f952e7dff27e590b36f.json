{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getTotalHeaderHeight } from '@mui/x-data-grid/internals';\nimport { getDataGridUtilityClass, gridClasses, gridDensityFactorSelector, useGridApiContext, useGridApiEventHandler, useGridSelector, gridColumnsTotalWidthSelector } from '@mui/x-data-grid';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(true);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    const dimensions = apiRef.current.getRootDimensions();\n    setCanScrollMore(() => {\n      if (scrollDirection === 'left') {\n        // Only render if the user has not reached yet the start of the list\n        return scrollPosition.current.left > 0;\n      }\n      if (scrollDirection === 'right') {\n        // Only render if the user has not reached yet the end of the list\n        const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n        return scrollPosition.current.left < maxScrollLeft;\n      }\n      return false;\n    });\n  }, [apiRef, columnsTotalWidth, scrollDirection]);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current);\n    // Avoid freeze and inertia.\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: {\n      height: headerHeight,\n      top: totalHeaderHeight - headerHeight\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };","map":{"version":3,"names":["_extends","React","PropTypes","clsx","unstable_composeClasses","composeClasses","unstable_useEventCallback","useEventCallback","styled","getTotalHeaderHeight","getDataGridUtilityClass","gridClasses","gridDensityFactorSelector","useGridApiContext","useGridApiEventHandler","useGridSelector","gridColumnsTotalWidthSelector","useGridRootProps","jsx","_jsx","CLIFF","SLOP","useUtilityClasses","ownerState","scrollDirection","classes","slots","root","GridScrollAreaRawRoot","name","slot","overridesResolver","props","styles","scrollArea","position","top","zIndex","width","bottom","left","right","GridScrollAreaRaw","rootRef","useRef","apiRef","timeout","dragging","setDragging","useState","canScrollMore","setCanScrollMore","densityFactor","columnsTotalWidth","scrollPosition","rootProps","totalHeaderHeight","columnHeaderHeight","headerHeight","Math","floor","handleScrolling","useCallback","newScrollPosition","current","dimensions","getRootDimensions","maxScrollLeft","viewportInnerSize","handleDragOver","event","offset","preventDefault","clientX","getBoundingClientRect","max","Error","clearTimeout","setTimeout","scroll","useEffect","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","ref","className","onDragOver","style","height","process","env","NODE_ENV","propTypes","oneOf","isRequired","GridScrollArea","memo"],"sources":["/Users/shyamkansagra/Documents/Code/general/pocket-wallet/node_modules/@mui/x-data-grid-pro/components/GridScrollArea.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getTotalHeaderHeight } from '@mui/x-data-grid/internals';\nimport { getDataGridUtilityClass, gridClasses, gridDensityFactorSelector, useGridApiContext, useGridApiEventHandler, useGridSelector, gridColumnsTotalWidthSelector } from '@mui/x-data-grid';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(true);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    const dimensions = apiRef.current.getRootDimensions();\n    setCanScrollMore(() => {\n      if (scrollDirection === 'left') {\n        // Only render if the user has not reached yet the start of the list\n        return scrollPosition.current.left > 0;\n      }\n      if (scrollDirection === 'right') {\n        // Only render if the user has not reached yet the end of the list\n        const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n        return scrollPosition.current.left < maxScrollLeft;\n      }\n      return false;\n    });\n  }, [apiRef, columnsTotalWidth, scrollDirection]);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current);\n    // Avoid freeze and inertia.\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: {\n      height: headerHeight,\n      top: totalHeaderHeight - headerHeight\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}