{"ast":null,"code":"import asyncWorker from './asyncWorker';\nexport function getRealGridData(rowLength, columns) {\n  return new Promise(resolve => {\n    const tasks = {\n      current: rowLength\n    };\n    const rows = [];\n    const indexedValues = {};\n    function work() {\n      const row = {};\n      for (let j = 0; j < columns.length; j += 1) {\n        const column = columns[j];\n        if (column.generateData) {\n          const context = {};\n          if (column.dataGeneratorUniquenessEnabled) {\n            let fieldValues = indexedValues[column.field];\n            if (!fieldValues) {\n              fieldValues = {};\n              indexedValues[column.field] = fieldValues;\n            }\n            context.values = fieldValues;\n          }\n          row[column.field] = column.generateData(row, context);\n        }\n      }\n      rows.push(row);\n      tasks.current -= 1;\n    }\n    const columnVisibilityModel = {};\n    columns.forEach(col => {\n      if (col.hide) {\n        columnVisibilityModel[col.field] = false;\n      }\n    });\n    asyncWorker({\n      work,\n      done: () => resolve({\n        columns,\n        rows,\n        initialState: {\n          columns: {\n            columnVisibilityModel\n          }\n        }\n      }),\n      tasks\n    });\n  });\n}","map":{"version":3,"names":["asyncWorker","getRealGridData","rowLength","columns","Promise","resolve","tasks","current","rows","indexedValues","work","row","j","length","column","generateData","context","dataGeneratorUniquenessEnabled","fieldValues","field","values","push","columnVisibilityModel","forEach","col","hide","done","initialState"],"sources":["/Users/shyamkansagra/Documents/Code/general/pocket-wallet/node_modules/@mui/x-data-grid-generator/services/real-data-service.js"],"sourcesContent":["import asyncWorker from './asyncWorker';\nexport function getRealGridData(rowLength, columns) {\n  return new Promise(resolve => {\n    const tasks = {\n      current: rowLength\n    };\n    const rows = [];\n    const indexedValues = {};\n    function work() {\n      const row = {};\n      for (let j = 0; j < columns.length; j += 1) {\n        const column = columns[j];\n        if (column.generateData) {\n          const context = {};\n          if (column.dataGeneratorUniquenessEnabled) {\n            let fieldValues = indexedValues[column.field];\n            if (!fieldValues) {\n              fieldValues = {};\n              indexedValues[column.field] = fieldValues;\n            }\n            context.values = fieldValues;\n          }\n          row[column.field] = column.generateData(row, context);\n        }\n      }\n      rows.push(row);\n      tasks.current -= 1;\n    }\n    const columnVisibilityModel = {};\n    columns.forEach(col => {\n      if (col.hide) {\n        columnVisibilityModel[col.field] = false;\n      }\n    });\n    asyncWorker({\n      work,\n      done: () => resolve({\n        columns,\n        rows,\n        initialState: {\n          columns: {\n            columnVisibilityModel\n          }\n        }\n      }),\n      tasks\n    });\n  });\n}"],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAO,SAASC,eAAeA,CAACC,SAAS,EAAEC,OAAO,EAAE;EAClD,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;IAC5B,MAAMC,KAAK,GAAG;MACZC,OAAO,EAAEL;IACX,CAAC;IACD,MAAMM,IAAI,GAAG,EAAE;IACf,MAAMC,aAAa,GAAG,CAAC,CAAC;IACxB,SAASC,IAAIA,CAAA,EAAG;MACd,MAAMC,GAAG,GAAG,CAAC,CAAC;MACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,OAAO,CAACU,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;QAC1C,MAAME,MAAM,GAAGX,OAAO,CAACS,CAAC,CAAC;QACzB,IAAIE,MAAM,CAACC,YAAY,EAAE;UACvB,MAAMC,OAAO,GAAG,CAAC,CAAC;UAClB,IAAIF,MAAM,CAACG,8BAA8B,EAAE;YACzC,IAAIC,WAAW,GAAGT,aAAa,CAACK,MAAM,CAACK,KAAK,CAAC;YAC7C,IAAI,CAACD,WAAW,EAAE;cAChBA,WAAW,GAAG,CAAC,CAAC;cAChBT,aAAa,CAACK,MAAM,CAACK,KAAK,CAAC,GAAGD,WAAW;YAC3C;YACAF,OAAO,CAACI,MAAM,GAAGF,WAAW;UAC9B;UACAP,GAAG,CAACG,MAAM,CAACK,KAAK,CAAC,GAAGL,MAAM,CAACC,YAAY,CAACJ,GAAG,EAAEK,OAAO,CAAC;QACvD;MACF;MACAR,IAAI,CAACa,IAAI,CAACV,GAAG,CAAC;MACdL,KAAK,CAACC,OAAO,IAAI,CAAC;IACpB;IACA,MAAMe,qBAAqB,GAAG,CAAC,CAAC;IAChCnB,OAAO,CAACoB,OAAO,CAACC,GAAG,IAAI;MACrB,IAAIA,GAAG,CAACC,IAAI,EAAE;QACZH,qBAAqB,CAACE,GAAG,CAACL,KAAK,CAAC,GAAG,KAAK;MAC1C;IACF,CAAC,CAAC;IACFnB,WAAW,CAAC;MACVU,IAAI;MACJgB,IAAI,EAAEA,CAAA,KAAMrB,OAAO,CAAC;QAClBF,OAAO;QACPK,IAAI;QACJmB,YAAY,EAAE;UACZxB,OAAO,EAAE;YACPmB;UACF;QACF;MACF,CAAC,CAAC;MACFhB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}