{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_PRO_PROPS_DEFAULT_VALUES, GRID_DEFAULT_LOCALE_TEXT } from '@mui/x-data-grid-pro';\nimport { computeSlots, useProps, uncapitalizeObjectKeys } from '@mui/x-data-grid-pro/internals';\nimport { GRID_AGGREGATION_FUNCTIONS } from '../hooks/features/aggregation';\nimport { DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS } from '../constants/dataGridPremiumDefaultSlotsComponents';\n\n/**\n * The default values of `DataGridPremiumPropsWithDefaultValue` to inject in the props of DataGridPremium.\n */\nexport const DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES = _extends({}, DATA_GRID_PRO_PROPS_DEFAULT_VALUES, {\n  unstable_cellSelection: false,\n  disableAggregation: false,\n  disableRowGrouping: false,\n  rowGroupingColumnMode: 'single',\n  aggregationFunctions: GRID_AGGREGATION_FUNCTIONS,\n  aggregationRowsScope: 'filtered',\n  getAggregationPosition: groupNode => groupNode.depth === -1 ? 'footer' : 'inline',\n  disableClipboardPaste: false,\n  unstable_splitClipboardPastedText: pastedText => {\n    // Excel on Windows adds an empty line break at the end of the copied text.\n    // See https://github.com/mui/mui-x/issues/9103\n    const text = pastedText.replace(/\\r?\\n$/, '');\n    return text.split(/\\r\\n|\\n|\\r/).map(row => row.split('\\t'));\n  }\n});\nconst defaultSlots = uncapitalizeObjectKeys(DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS);\nexport const useDataGridPremiumProps = inProps => {\n  const [components, componentsProps, themedProps] = useProps(useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    components,\n    slots: themedProps.slots\n  }), [components, themedProps.slots]);\n  return React.useMemo(() => {\n    var _themedProps$slotProp;\n    return _extends({}, DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES, themedProps, {\n      slotProps: (_themedProps$slotProp = themedProps.slotProps) != null ? _themedProps$slotProp : componentsProps,\n      localeText,\n      slots,\n      signature: 'DataGridPremium'\n    });\n  }, [themedProps, componentsProps, localeText, slots]);\n};","map":{"version":3,"names":["_extends","React","useThemeProps","DATA_GRID_PRO_PROPS_DEFAULT_VALUES","GRID_DEFAULT_LOCALE_TEXT","computeSlots","useProps","uncapitalizeObjectKeys","GRID_AGGREGATION_FUNCTIONS","DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS","DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES","unstable_cellSelection","disableAggregation","disableRowGrouping","rowGroupingColumnMode","aggregationFunctions","aggregationRowsScope","getAggregationPosition","groupNode","depth","disableClipboardPaste","unstable_splitClipboardPastedText","pastedText","text","replace","split","map","row","defaultSlots","useDataGridPremiumProps","inProps","components","componentsProps","themedProps","props","name","localeText","useMemo","slots","_themedProps$slotProp","slotProps","signature"],"sources":["/Users/shyamkansagra/Documents/Code/general/pocket-wallet/node_modules/@mui/x-data-grid-premium/DataGridPremium/useDataGridPremiumProps.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_PRO_PROPS_DEFAULT_VALUES, GRID_DEFAULT_LOCALE_TEXT } from '@mui/x-data-grid-pro';\nimport { computeSlots, useProps, uncapitalizeObjectKeys } from '@mui/x-data-grid-pro/internals';\nimport { GRID_AGGREGATION_FUNCTIONS } from '../hooks/features/aggregation';\nimport { DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS } from '../constants/dataGridPremiumDefaultSlotsComponents';\n\n/**\n * The default values of `DataGridPremiumPropsWithDefaultValue` to inject in the props of DataGridPremium.\n */\nexport const DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES = _extends({}, DATA_GRID_PRO_PROPS_DEFAULT_VALUES, {\n  unstable_cellSelection: false,\n  disableAggregation: false,\n  disableRowGrouping: false,\n  rowGroupingColumnMode: 'single',\n  aggregationFunctions: GRID_AGGREGATION_FUNCTIONS,\n  aggregationRowsScope: 'filtered',\n  getAggregationPosition: groupNode => groupNode.depth === -1 ? 'footer' : 'inline',\n  disableClipboardPaste: false,\n  unstable_splitClipboardPastedText: pastedText => {\n    // Excel on Windows adds an empty line break at the end of the copied text.\n    // See https://github.com/mui/mui-x/issues/9103\n    const text = pastedText.replace(/\\r?\\n$/, '');\n    return text.split(/\\r\\n|\\n|\\r/).map(row => row.split('\\t'));\n  }\n});\nconst defaultSlots = uncapitalizeObjectKeys(DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS);\nexport const useDataGridPremiumProps = inProps => {\n  const [components, componentsProps, themedProps] = useProps(useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    components,\n    slots: themedProps.slots\n  }), [components, themedProps.slots]);\n  return React.useMemo(() => {\n    var _themedProps$slotProp;\n    return _extends({}, DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES, themedProps, {\n      slotProps: (_themedProps$slotProp = themedProps.slotProps) != null ? _themedProps$slotProp : componentsProps,\n      localeText,\n      slots,\n      signature: 'DataGridPremium'\n    });\n  }, [themedProps, componentsProps, localeText, slots]);\n};"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,kCAAkC,EAAEC,wBAAwB,QAAQ,sBAAsB;AACnG,SAASC,YAAY,EAAEC,QAAQ,EAAEC,sBAAsB,QAAQ,gCAAgC;AAC/F,SAASC,0BAA0B,QAAQ,+BAA+B;AAC1E,SAASC,0CAA0C,QAAQ,oDAAoD;;AAE/G;AACA;AACA;AACA,OAAO,MAAMC,sCAAsC,GAAGV,QAAQ,CAAC,CAAC,CAAC,EAAEG,kCAAkC,EAAE;EACrGQ,sBAAsB,EAAE,KAAK;EAC7BC,kBAAkB,EAAE,KAAK;EACzBC,kBAAkB,EAAE,KAAK;EACzBC,qBAAqB,EAAE,QAAQ;EAC/BC,oBAAoB,EAAEP,0BAA0B;EAChDQ,oBAAoB,EAAE,UAAU;EAChCC,sBAAsB,EAAEC,SAAS,IAAIA,SAAS,CAACC,KAAK,KAAK,CAAC,CAAC,GAAG,QAAQ,GAAG,QAAQ;EACjFC,qBAAqB,EAAE,KAAK;EAC5BC,iCAAiC,EAAEC,UAAU,IAAI;IAC/C;IACA;IACA,MAAMC,IAAI,GAAGD,UAAU,CAACE,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IAC7C,OAAOD,IAAI,CAACE,KAAK,CAAC,YAAY,CAAC,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACF,KAAK,CAAC,IAAI,CAAC,CAAC;EAC7D;AACF,CAAC,CAAC;AACF,MAAMG,YAAY,GAAGrB,sBAAsB,CAACE,0CAA0C,CAAC;AACvF,OAAO,MAAMoB,uBAAuB,GAAGC,OAAO,IAAI;EAChD,MAAM,CAACC,UAAU,EAAEC,eAAe,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAACJ,aAAa,CAAC;IACxEgC,KAAK,EAAEJ,OAAO;IACdK,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EACH,MAAMC,UAAU,GAAGnC,KAAK,CAACoC,OAAO,CAAC,MAAMrC,QAAQ,CAAC,CAAC,CAAC,EAAEI,wBAAwB,EAAE6B,WAAW,CAACG,UAAU,CAAC,EAAE,CAACH,WAAW,CAACG,UAAU,CAAC,CAAC;EAChI,MAAME,KAAK,GAAGrC,KAAK,CAACoC,OAAO,CAAC,MAAMhC,YAAY,CAAC;IAC7CuB,YAAY;IACZG,UAAU;IACVO,KAAK,EAAEL,WAAW,CAACK;EACrB,CAAC,CAAC,EAAE,CAACP,UAAU,EAAEE,WAAW,CAACK,KAAK,CAAC,CAAC;EACpC,OAAOrC,KAAK,CAACoC,OAAO,CAAC,MAAM;IACzB,IAAIE,qBAAqB;IACzB,OAAOvC,QAAQ,CAAC,CAAC,CAAC,EAAEU,sCAAsC,EAAEuB,WAAW,EAAE;MACvEO,SAAS,EAAE,CAACD,qBAAqB,GAAGN,WAAW,CAACO,SAAS,KAAK,IAAI,GAAGD,qBAAqB,GAAGP,eAAe;MAC5GI,UAAU;MACVE,KAAK;MACLG,SAAS,EAAE;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,CAACR,WAAW,EAAED,eAAe,EAAEI,UAAU,EAAEE,KAAK,CAAC,CAAC;AACvD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}