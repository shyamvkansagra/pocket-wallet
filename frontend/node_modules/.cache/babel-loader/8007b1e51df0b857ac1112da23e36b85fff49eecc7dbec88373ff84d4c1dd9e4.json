{"ast":null,"code":"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Country = /*#__PURE__*/React.memo(function Country(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      '&  > img': {\n        mr: 0.5,\n        flexShrink: 0,\n        width: '20px'\n      }\n    },\n    children: [/*#__PURE__*/_jsx(\"img\", {\n      loading: \"lazy\",\n      width: \"20\",\n      src: `https://flagcdn.com/w20/${value.code.toLowerCase()}.png`,\n      srcSet: `https://flagcdn.com/w40/${value.code.toLowerCase()}.png 2x`,\n      alt: \"\"\n    }), /*#__PURE__*/_jsx(Box, {\n      component: \"span\",\n      sx: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      children: value.label\n    })]\n  });\n});\nexport function renderCountry(params) {\n  if (params.value == null) {\n    return '';\n  }\n\n  // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Country, {\n    value: params.value\n  });\n}","map":{"version":3,"names":["React","Box","jsx","_jsx","jsxs","_jsxs","Country","memo","props","value","sx","width","display","alignItems","mr","flexShrink","children","loading","src","code","toLowerCase","srcSet","alt","component","overflow","textOverflow","label","renderCountry","params","aggregation","hasCellUnit"],"sources":["/Users/shyamkansagra/Documents/Code/general/pocket-wallet/node_modules/@mui/x-data-grid-generator/renderer/renderCountry.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Country = /*#__PURE__*/React.memo(function Country(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      '&  > img': {\n        mr: 0.5,\n        flexShrink: 0,\n        width: '20px'\n      }\n    },\n    children: [/*#__PURE__*/_jsx(\"img\", {\n      loading: \"lazy\",\n      width: \"20\",\n      src: `https://flagcdn.com/w20/${value.code.toLowerCase()}.png`,\n      srcSet: `https://flagcdn.com/w40/${value.code.toLowerCase()}.png 2x`,\n      alt: \"\"\n    }), /*#__PURE__*/_jsx(Box, {\n      component: \"span\",\n      sx: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      children: value.label\n    })]\n  });\n});\nexport function renderCountry(params) {\n  if (params.value == null) {\n    return '';\n  }\n\n  // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Country, {\n    value: params.value\n  });\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AACjD,MAAMC,OAAO,GAAG,aAAaN,KAAK,CAACO,IAAI,CAAC,SAASD,OAAOA,CAACE,KAAK,EAAE;EAC9D,MAAM;IACJC;EACF,CAAC,GAAGD,KAAK;EACT,OAAO,aAAaH,KAAK,CAACJ,GAAG,EAAE;IAC7BS,EAAE,EAAE;MACFC,KAAK,EAAE,MAAM;MACbC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpB,UAAU,EAAE;QACVC,EAAE,EAAE,GAAG;QACPC,UAAU,EAAE,CAAC;QACbJ,KAAK,EAAE;MACT;IACF,CAAC;IACDK,QAAQ,EAAE,CAAC,aAAab,IAAI,CAAC,KAAK,EAAE;MAClCc,OAAO,EAAE,MAAM;MACfN,KAAK,EAAE,IAAI;MACXO,GAAG,EAAG,2BAA0BT,KAAK,CAACU,IAAI,CAACC,WAAW,CAAC,CAAE,MAAK;MAC9DC,MAAM,EAAG,2BAA0BZ,KAAK,CAACU,IAAI,CAACC,WAAW,CAAC,CAAE,SAAQ;MACpEE,GAAG,EAAE;IACP,CAAC,CAAC,EAAE,aAAanB,IAAI,CAACF,GAAG,EAAE;MACzBsB,SAAS,EAAE,MAAM;MACjBb,EAAE,EAAE;QACFc,QAAQ,EAAE,QAAQ;QAClBC,YAAY,EAAE;MAChB,CAAC;MACDT,QAAQ,EAAEP,KAAK,CAACiB;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,OAAO,SAASC,aAAaA,CAACC,MAAM,EAAE;EACpC,IAAIA,MAAM,CAACnB,KAAK,IAAI,IAAI,EAAE;IACxB,OAAO,EAAE;EACX;;EAEA;EACA;EACA,IAAImB,MAAM,CAACC,WAAW,IAAI,CAACD,MAAM,CAACC,WAAW,CAACC,WAAW,EAAE;IACzD,OAAO,IAAI;EACb;EACA,OAAO,aAAa3B,IAAI,CAACG,OAAO,EAAE;IAChCG,KAAK,EAAEmB,MAAM,CAACnB;EAChB,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}