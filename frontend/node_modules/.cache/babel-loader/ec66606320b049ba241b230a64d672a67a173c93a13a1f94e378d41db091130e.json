{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridClasses } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_DETAIL_PANEL_TOGGLE_COL_DEF } from './gridDetailPanelToggleColDef';\nimport { gridDetailPanelExpandedRowIdsSelector } from './gridDetailPanelSelector';\nexport const useGridDetailPanelPreProcessors = (privateApiRef, props) => {\n  const addToggleColumn = React.useCallback(columnsState => {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_DETAIL_PANEL_TOGGLE_FIELD);\n      }\n      return columnsState;\n    }\n\n    // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n    if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    }\n\n    // Otherwise, add the toggle column at the beginning\n    columnsState.orderedFields = [GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.orderedFields];\n    columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD] = _extends({}, GRID_DETAIL_PANEL_TOGGLE_COL_DEF, {\n      headerName: privateApiRef.current.getLocaleText('detailPanelToggle')\n    });\n    return columnsState;\n  }, [privateApiRef, props.getDetailPanelContent]);\n  const addExpandedClassToRow = React.useCallback((classes, id) => {\n    if (props.getDetailPanelContent == null) {\n      return classes;\n    }\n    const expandedRowIds = gridDetailPanelExpandedRowIdsSelector(privateApiRef.current.state);\n    if (!expandedRowIds.includes(id)) {\n      return classes;\n    }\n    return [...classes, gridClasses['row--detailPanelExpanded']];\n  }, [privateApiRef, props.getDetailPanelContent]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', addToggleColumn);\n  useGridRegisterPipeProcessor(privateApiRef, 'rowClassName', addExpandedClassToRow);\n};","map":{"version":3,"names":["_extends","React","gridClasses","useGridRegisterPipeProcessor","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DETAIL_PANEL_TOGGLE_COL_DEF","gridDetailPanelExpandedRowIdsSelector","useGridDetailPanelPreProcessors","privateApiRef","props","addToggleColumn","useCallback","columnsState","getDetailPanelContent","lookup","orderedFields","filter","field","headerName","current","getLocaleText","addExpandedClassToRow","classes","id","expandedRowIds","state","includes"],"sources":["/Users/shyamkansagra/Documents/Code/general/pocket-wallet/node_modules/@mui/x-data-grid-pro/hooks/features/detailPanel/useGridDetailPanelPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridClasses } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_DETAIL_PANEL_TOGGLE_COL_DEF } from './gridDetailPanelToggleColDef';\nimport { gridDetailPanelExpandedRowIdsSelector } from './gridDetailPanelSelector';\nexport const useGridDetailPanelPreProcessors = (privateApiRef, props) => {\n  const addToggleColumn = React.useCallback(columnsState => {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_DETAIL_PANEL_TOGGLE_FIELD);\n      }\n      return columnsState;\n    }\n\n    // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n    if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    }\n\n    // Otherwise, add the toggle column at the beginning\n    columnsState.orderedFields = [GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.orderedFields];\n    columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD] = _extends({}, GRID_DETAIL_PANEL_TOGGLE_COL_DEF, {\n      headerName: privateApiRef.current.getLocaleText('detailPanelToggle')\n    });\n    return columnsState;\n  }, [privateApiRef, props.getDetailPanelContent]);\n  const addExpandedClassToRow = React.useCallback((classes, id) => {\n    if (props.getDetailPanelContent == null) {\n      return classes;\n    }\n    const expandedRowIds = gridDetailPanelExpandedRowIdsSelector(privateApiRef.current.state);\n    if (!expandedRowIds.includes(id)) {\n      return classes;\n    }\n    return [...classes, gridClasses['row--detailPanelExpanded']];\n  }, [privateApiRef, props.getDetailPanelContent]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', addToggleColumn);\n  useGridRegisterPipeProcessor(privateApiRef, 'rowClassName', addExpandedClassToRow);\n};"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,4BAA4B,QAAQ,4BAA4B;AACzE,SAASC,8BAA8B,EAAEC,gCAAgC,QAAQ,+BAA+B;AAChH,SAASC,qCAAqC,QAAQ,2BAA2B;AACjF,OAAO,MAAMC,+BAA+B,GAAGA,CAACC,aAAa,EAAEC,KAAK,KAAK;EACvE,MAAMC,eAAe,GAAGT,KAAK,CAACU,WAAW,CAACC,YAAY,IAAI;IACxD,IAAIH,KAAK,CAACI,qBAAqB,IAAI,IAAI,EAAE;MACvC;MACA,IAAID,YAAY,CAACE,MAAM,CAACV,8BAA8B,CAAC,EAAE;QACvD,OAAOQ,YAAY,CAACE,MAAM,CAACV,8BAA8B,CAAC;QAC1DQ,YAAY,CAACG,aAAa,GAAGH,YAAY,CAACG,aAAa,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAKb,8BAA8B,CAAC;MACnH;MACA,OAAOQ,YAAY;IACrB;;IAEA;IACA;IACA,IAAIA,YAAY,CAACE,MAAM,CAACV,8BAA8B,CAAC,EAAE;MACvD,OAAOQ,YAAY;IACrB;;IAEA;IACAA,YAAY,CAACG,aAAa,GAAG,CAACX,8BAA8B,EAAE,GAAGQ,YAAY,CAACG,aAAa,CAAC;IAC5FH,YAAY,CAACE,MAAM,CAACV,8BAA8B,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,EAAEK,gCAAgC,EAAE;MACnGa,UAAU,EAAEV,aAAa,CAACW,OAAO,CAACC,aAAa,CAAC,mBAAmB;IACrE,CAAC,CAAC;IACF,OAAOR,YAAY;EACrB,CAAC,EAAE,CAACJ,aAAa,EAAEC,KAAK,CAACI,qBAAqB,CAAC,CAAC;EAChD,MAAMQ,qBAAqB,GAAGpB,KAAK,CAACU,WAAW,CAAC,CAACW,OAAO,EAAEC,EAAE,KAAK;IAC/D,IAAId,KAAK,CAACI,qBAAqB,IAAI,IAAI,EAAE;MACvC,OAAOS,OAAO;IAChB;IACA,MAAME,cAAc,GAAGlB,qCAAqC,CAACE,aAAa,CAACW,OAAO,CAACM,KAAK,CAAC;IACzF,IAAI,CAACD,cAAc,CAACE,QAAQ,CAACH,EAAE,CAAC,EAAE;MAChC,OAAOD,OAAO;IAChB;IACA,OAAO,CAAC,GAAGA,OAAO,EAAEpB,WAAW,CAAC,0BAA0B,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACM,aAAa,EAAEC,KAAK,CAACI,qBAAqB,CAAC,CAAC;EAChDV,4BAA4B,CAACK,aAAa,EAAE,gBAAgB,EAAEE,eAAe,CAAC;EAC9EP,4BAA4B,CAACK,aAAa,EAAE,cAAc,EAAEa,qBAAqB,CAAC;AACpF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}