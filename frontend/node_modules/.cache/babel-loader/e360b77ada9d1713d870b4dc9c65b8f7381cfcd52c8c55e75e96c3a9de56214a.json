{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '@mui/x-data-grid';\nimport { getRowIdFromRowModel } from '@mui/x-data-grid/internals';\nfunction createPinnedRowsInternalCache(pinnedRows, getRowId) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const cache = {\n    topIds: [],\n    bottomIds: [],\n    idLookup: {}\n  };\n  pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.forEach(rowModel => {\n    const id = getRowIdFromRowModel(rowModel, getRowId);\n    cache.topIds.push(id);\n    cache.idLookup[id] = rowModel;\n  });\n  pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.forEach(rowModel => {\n    const id = getRowIdFromRowModel(rowModel, getRowId);\n    cache.bottomIds.push(id);\n    cache.idLookup[id] = rowModel;\n  });\n  return cache;\n}\nexport const rowPinningStateInitializer = (state, props, apiRef) => {\n  var _state$rows;\n  apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(props.pinnedRows, props.getRowId);\n  return _extends({}, state, {\n    rows: _extends({}, state.rows, {\n      additionalRowGroups: _extends({}, (_state$rows = state.rows) == null ? void 0 : _state$rows.additionalRowGroups, {\n        pinnedRows: {\n          top: [],\n          bottom: []\n        }\n      })\n    })\n  });\n};\nexport const useGridRowPinning = (apiRef, props) => {\n  const setPinnedRows = React.useCallback(newPinnedRows => {\n    apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(newPinnedRows, props.getRowId);\n    apiRef.current.requestPipeProcessorsApplication('hydrateRows');\n  }, [apiRef, props.getRowId]);\n  useGridApiMethod(apiRef, {\n    unstable_setPinnedRows: setPinnedRows\n  }, 'public');\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    apiRef.current.unstable_setPinnedRows(props.pinnedRows);\n  }, [apiRef, props.pinnedRows]);\n};","map":{"version":3,"names":["_extends","React","useGridApiMethod","getRowIdFromRowModel","createPinnedRowsInternalCache","pinnedRows","getRowId","_pinnedRows$top","_pinnedRows$bottom","cache","topIds","bottomIds","idLookup","top","forEach","rowModel","id","push","bottom","rowPinningStateInitializer","state","props","apiRef","_state$rows","current","caches","rows","additionalRowGroups","useGridRowPinning","setPinnedRows","useCallback","newPinnedRows","requestPipeProcessorsApplication","unstable_setPinnedRows","isFirstRender","useRef","useEffect"],"sources":["/Users/shyamkansagra/Documents/Code/general/pocket-wallet/node_modules/@mui/x-data-grid-pro/hooks/features/rowPinning/useGridRowPinning.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '@mui/x-data-grid';\nimport { getRowIdFromRowModel } from '@mui/x-data-grid/internals';\nfunction createPinnedRowsInternalCache(pinnedRows, getRowId) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const cache = {\n    topIds: [],\n    bottomIds: [],\n    idLookup: {}\n  };\n  pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.forEach(rowModel => {\n    const id = getRowIdFromRowModel(rowModel, getRowId);\n    cache.topIds.push(id);\n    cache.idLookup[id] = rowModel;\n  });\n  pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.forEach(rowModel => {\n    const id = getRowIdFromRowModel(rowModel, getRowId);\n    cache.bottomIds.push(id);\n    cache.idLookup[id] = rowModel;\n  });\n  return cache;\n}\nexport const rowPinningStateInitializer = (state, props, apiRef) => {\n  var _state$rows;\n  apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(props.pinnedRows, props.getRowId);\n  return _extends({}, state, {\n    rows: _extends({}, state.rows, {\n      additionalRowGroups: _extends({}, (_state$rows = state.rows) == null ? void 0 : _state$rows.additionalRowGroups, {\n        pinnedRows: {\n          top: [],\n          bottom: []\n        }\n      })\n    })\n  });\n};\nexport const useGridRowPinning = (apiRef, props) => {\n  const setPinnedRows = React.useCallback(newPinnedRows => {\n    apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(newPinnedRows, props.getRowId);\n    apiRef.current.requestPipeProcessorsApplication('hydrateRows');\n  }, [apiRef, props.getRowId]);\n  useGridApiMethod(apiRef, {\n    unstable_setPinnedRows: setPinnedRows\n  }, 'public');\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    apiRef.current.unstable_setPinnedRows(props.pinnedRows);\n  }, [apiRef, props.pinnedRows]);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}