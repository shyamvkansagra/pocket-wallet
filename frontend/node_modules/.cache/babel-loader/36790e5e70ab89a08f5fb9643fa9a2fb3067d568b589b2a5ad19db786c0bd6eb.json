{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector, gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridRowGroupingSanitizedModelSelector } from '../hooks/features/rowGrouping/gridRowGroupingSelector';\nimport { getRowGroupingCriteriaFromGroupingField, GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, isGroupingColumn } from '../hooks/features/rowGrouping/gridRowGroupingUtils';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuRowGroupItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rowGroupingModel = useGridSelector(apiRef, gridRowGroupingSanitizedModelSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const rootProps = useGridRootProps();\n  const renderUnGroupingMenuItem = field => {\n    var _columnsLookup$field$;\n    const ungroupColumn = event => {\n      apiRef.current.removeRowGroupingCriteria(field);\n      onClick(event);\n    };\n    const name = (_columnsLookup$field$ = columnsLookup[field].headerName) != null ? _columnsLookup$field$ : field;\n    return /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: ungroupColumn,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuUngroupIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('unGroupColumn')(name)\n      })]\n    }, field);\n  };\n  if (!colDef || !isGroupingColumn(colDef.field)) {\n    return null;\n  }\n  if (colDef.field === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD) {\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: rowGroupingModel.map(renderUnGroupingMenuItem)\n    });\n  }\n  return renderUnGroupingMenuItem(getRowGroupingCriteriaFromGroupingField(colDef.field));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuRowGroupItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuRowGroupItem };","map":{"version":3,"names":["React","PropTypes","MenuItem","ListItemIcon","ListItemText","useGridSelector","gridColumnLookupSelector","useGridApiContext","gridRowGroupingSanitizedModelSelector","getRowGroupingCriteriaFromGroupingField","GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD","isGroupingColumn","useGridRootProps","jsx","_jsx","jsxs","_jsxs","GridColumnMenuRowGroupItem","props","colDef","onClick","apiRef","rowGroupingModel","columnsLookup","rootProps","renderUnGroupingMenuItem","field","_columnsLookup$field$","ungroupColumn","event","current","removeRowGroupingCriteria","name","headerName","children","slots","columnMenuUngroupIcon","fontSize","getLocaleText","Fragment","map","process","env","NODE_ENV","propTypes","object","isRequired","func"],"sources":["/Users/shyamkansagra/Documents/Code/general/pocket-wallet/node_modules/@mui/x-data-grid-premium/components/GridColumnMenuRowGroupItem.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector, gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridRowGroupingSanitizedModelSelector } from '../hooks/features/rowGrouping/gridRowGroupingSelector';\nimport { getRowGroupingCriteriaFromGroupingField, GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, isGroupingColumn } from '../hooks/features/rowGrouping/gridRowGroupingUtils';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuRowGroupItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rowGroupingModel = useGridSelector(apiRef, gridRowGroupingSanitizedModelSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const rootProps = useGridRootProps();\n  const renderUnGroupingMenuItem = field => {\n    var _columnsLookup$field$;\n    const ungroupColumn = event => {\n      apiRef.current.removeRowGroupingCriteria(field);\n      onClick(event);\n    };\n    const name = (_columnsLookup$field$ = columnsLookup[field].headerName) != null ? _columnsLookup$field$ : field;\n    return /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: ungroupColumn,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuUngroupIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('unGroupColumn')(name)\n      })]\n    }, field);\n  };\n  if (!colDef || !isGroupingColumn(colDef.field)) {\n    return null;\n  }\n  if (colDef.field === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD) {\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: rowGroupingModel.map(renderUnGroupingMenuItem)\n    });\n  }\n  return renderUnGroupingMenuItem(getRowGroupingCriteriaFromGroupingField(colDef.field));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuRowGroupItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuRowGroupItem };"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,eAAe,EAAEC,wBAAwB,QAAQ,sBAAsB;AAChF,SAASC,iBAAiB,QAAQ,kCAAkC;AACpE,SAASC,qCAAqC,QAAQ,uDAAuD;AAC7G,SAASC,uCAAuC,EAAEC,uCAAuC,EAAEC,gBAAgB,QAAQ,oDAAoD;AACvK,SAASC,gBAAgB,QAAQ,iCAAiC;AAClE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AACjD,SAASC,0BAA0BA,CAACC,KAAK,EAAE;EACzC,MAAM;IACJC,MAAM;IACNC;EACF,CAAC,GAAGF,KAAK;EACT,MAAMG,MAAM,GAAGd,iBAAiB,CAAC,CAAC;EAClC,MAAMe,gBAAgB,GAAGjB,eAAe,CAACgB,MAAM,EAAEb,qCAAqC,CAAC;EACvF,MAAMe,aAAa,GAAGlB,eAAe,CAACgB,MAAM,EAAEf,wBAAwB,CAAC;EACvE,MAAMkB,SAAS,GAAGZ,gBAAgB,CAAC,CAAC;EACpC,MAAMa,wBAAwB,GAAGC,KAAK,IAAI;IACxC,IAAIC,qBAAqB;IACzB,MAAMC,aAAa,GAAGC,KAAK,IAAI;MAC7BR,MAAM,CAACS,OAAO,CAACC,yBAAyB,CAACL,KAAK,CAAC;MAC/CN,OAAO,CAACS,KAAK,CAAC;IAChB,CAAC;IACD,MAAMG,IAAI,GAAG,CAACL,qBAAqB,GAAGJ,aAAa,CAACG,KAAK,CAAC,CAACO,UAAU,KAAK,IAAI,GAAGN,qBAAqB,GAAGD,KAAK;IAC9G,OAAO,aAAaV,KAAK,CAACd,QAAQ,EAAE;MAClCkB,OAAO,EAAEQ,aAAa;MACtBM,QAAQ,EAAE,CAAC,aAAapB,IAAI,CAACX,YAAY,EAAE;QACzC+B,QAAQ,EAAE,aAAapB,IAAI,CAACU,SAAS,CAACW,KAAK,CAACC,qBAAqB,EAAE;UACjEC,QAAQ,EAAE;QACZ,CAAC;MACH,CAAC,CAAC,EAAE,aAAavB,IAAI,CAACV,YAAY,EAAE;QAClC8B,QAAQ,EAAEb,MAAM,CAACS,OAAO,CAACQ,aAAa,CAAC,eAAe,CAAC,CAACN,IAAI;MAC9D,CAAC,CAAC;IACJ,CAAC,EAAEN,KAAK,CAAC;EACX,CAAC;EACD,IAAI,CAACP,MAAM,IAAI,CAACR,gBAAgB,CAACQ,MAAM,CAACO,KAAK,CAAC,EAAE;IAC9C,OAAO,IAAI;EACb;EACA,IAAIP,MAAM,CAACO,KAAK,KAAKhB,uCAAuC,EAAE;IAC5D,OAAO,aAAaI,IAAI,CAACd,KAAK,CAACuC,QAAQ,EAAE;MACvCL,QAAQ,EAAEZ,gBAAgB,CAACkB,GAAG,CAACf,wBAAwB;IACzD,CAAC,CAAC;EACJ;EACA,OAAOA,wBAAwB,CAAChB,uCAAuC,CAACU,MAAM,CAACO,KAAK,CAAC,CAAC;AACxF;AACAe,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG1B,0BAA0B,CAAC2B,SAAS,GAAG;EAC7E;EACA;EACA;EACA;EACAzB,MAAM,EAAElB,SAAS,CAAC4C,MAAM,CAACC,UAAU;EACnC1B,OAAO,EAAEnB,SAAS,CAAC8C,IAAI,CAACD;AAC1B,CAAC,GAAG,KAAK,CAAC;AACV,SAAS7B,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}